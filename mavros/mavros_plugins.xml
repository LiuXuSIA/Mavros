<library path="lib/libmavros_plugins">
	<!--<class name="dummy" type="mavros::std_plugins::DummyPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Dummy test plugin.</description>
	</class>-->
	<class name="sys_status" type="mavros::std_plugins::SystemStatusPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish system status.</description>
	</class>
	<class name="imu_pub" type="mavros::std_plugins::IMUPubPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish IMU data.</description>
	</class>
	<class name="param" type="mavros::std_plugins::ParamPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Access to FCU parameters.</description>
	</class>
	<class name="waypoint" type="mavros::std_plugins::WaypointPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Access to FCU mission.</description>
	</class>
	<class name="rc_io" type="mavros::std_plugins::RCIOPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish RC IO state.</description>
	</class>
	<class name="command" type="mavros::std_plugins::CommandPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Send commands to FCU.</description>
	</class>
	<class name="local_position" type="mavros::std_plugins::LocalPositionPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish FCU local position.</description>
	</class>
	<class name="global_position" type="mavros::std_plugins::GlobalPositionPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish FCU fused global position and raw GPS fix.</description>
	</class>
	<class name="setpoint_position" type="mavros::std_plugins::SetpointPositionPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Send to FCU external position setpoint.</description>
	</class>
	<class name="safety_area" type="mavros::std_plugins::SafetyAreaPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Send to FCU safety allowed area.</description>
	</class>
	<!--class name="3dr_radio" type="mavros::std_plugins::TDRRadioPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish 3DR Radio modem status.</description>
	</class>-->
	<class name="setpoint_velocity" type="mavros::std_plugins::SetpointVelocityPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Send to FCU external velocity setpoint.</description>
	</class>
	<class name="setpoint_accel" type="mavros::std_plugins::SetpointAccelerationPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Send to FCU external acceleration/force setpoint.</description>
	</class>
	<class name="setpoint_attitude" type="mavros::std_plugins::SetpointAttitudePlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Send to FCU external attitude setpoint.</description>
	</class>
	<class name="setpoint_raw" type="mavros::std_plugins::SetpointRawPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Access to raw POSITION_TARGET_LOCAL_NED messages.</description>
	</class>
	<!--class name="vfr_hud" type="mavros::std_plugins::VfrHudPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish VFR HUD data and WIND estimations.</description>
	</class>-->
	<class name="ftp" type="mavros::std_plugins::FTPPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Access to files on FCU via MAVLink-FTP.</description>
	</class>
	<class name="sys_time" type="mavros::std_plugins::SystemTimePlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Synchronise clocks with FCU.</description>
	</class>
	<class name="actuator_control" type="mavros::std_plugins::ActuatorControlPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Send direct controls values to the actuators</description>
	</class>
	<class name="manual_control" type="mavros::std_plugins::ManualControlPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish manual control values</description>
	</class>
	<class name="altitude" type="mavros::std_plugins::AltitudePlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish altitude values</description>
	</class>
	<class name="attitude" type="mavros::std_plugins::AttitudePlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish attitude values</description>
	</class>

<!--comment: old custom messages">	
	<class name="mavros_test_msg" type="mavros::std_plugins::Mavros_test_msgPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe mavros_msg, this message for testing</description>
	</class>
    <class name="hil_controls" type="mavros::std_plugins::HilControlsPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish HIL controls values</description>
	</class>
    <class name="fixed_target_position" type="mavros::std_plugins::FixedTargetPositionPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe fixed_target_position values</description>
	</class>
    <class name="fixed_target_return" type="mavros::std_plugins::FixedTargetReturnPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish fixed_target_return values</description>
	</class>
    <class name="obstacle_position" type="mavros::std_plugins::ObstaclePositionPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish obstacle_position values</description>
	</class>
    <class name="task_status_change" type="mavros::std_plugins::TaskStatusChangePlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe task_status_change values</description>
	</class>
    <class name="task_status_monitor" type="mavros::std_plugins::TaskStatusMonitorPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish task_status_monitor values</description>
	</class>
    <class name="vision_num_scan" type="mavros::std_plugins::VisionNumScanPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish vision_num_scan values</description>
	</class>
    <class name="vision_one_num_get" type="mavros::std_plugins::VisionOneNumGetPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish vision_one_num_get values</description>
	</class>
    <class name="yaw_sp_calculated" type="mavros::std_plugins::YawSpCalculatedPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish yaw_sp_calculated values</description>
	</class>
</comment>-->

	
	<class name="fixed_target_position_p2m" type="mavros::std_plugins::FixedTargetPositionP2MPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish fixed_target_position_p2m values</description>
	</class>
	<class name="fixed_target_return_m2p" type="mavros::std_plugins::FixedTargetReturnM2PPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe fixed_target_return_m2p values</description>
	</class>
    <class name="task_status_change_p2m" type="mavros::std_plugins::TaskStatusChangeP2MPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Publish task_status_change_p2m values</description>
	</class>
    <class name="task_status_monitor_m2p" type="mavros::std_plugins::TASK_STATUS_MONITOR_M2PPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe task_status_monitor_m2p values</description>
	</class>
    <class name="yaw_sp_calculated_m2p" type="mavros::std_plugins::YAW_SP_CALCULATED_M2PPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe yaw_sp_calculated_m2p values</description>
	</class>
	<class name="vision_position_get_m2p" type="mavros::std_plugins::VISION_POSITION_GET_M2PPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe visition_position_get_m2p values</description>
	</class>
	<class name="grab_status_m2p" type="mavros::std_plugins::GRAB_STATUS_M2PPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe yaw_sp_calculated_m2p values</description>
	</class>
	<class name="gps_status" type="mavros::std_plugins::GPS_STATUSPlugin" base_class_type="mavros::plugin::PluginBase">
		<description>Subscribe yaw_sp_calculated_m2p values</description>
	</class>


</library>

